{
  "/Users/sateeshpenugonda/Desktop/meet/auth-server": {
    "versionSfCore": null,
    "versionFramework": "4.4.7",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "file": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "bhavani",
            "app": "meet",
            "service": "auth-server",
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "eu-central-1",
              "timeout": 30,
              "environment": {
                "CLIENT_ID": "1048440440086-e433gpnelsb0kr1qq9qm581fdt41eu7c.apps.googleusercontent.com",
                "CLIENT_SECRET": "<REDACTED>",
                "CALENDAR_ID": "fullstackwebdev@careerfoundry.com"
              },
              "stage": "dev",
              "versionFunctions": true
            },
            "functions": {
              "getAuthURL": {
                "handler": "handler.getAuthURL",
                "events": [
                  {
                    "http": {
                      "path": "api/get-auth-url",
                      "method": "get"
                    }
                  }
                ],
                "name": "auth-server-dev-getAuthURL"
              },
              "getAccessToken": "<REDACTED>",
              "getCalendarEvents": {
                "handler": "handler.getCalendarEvents",
                "events": {
                  "-http": {
                    "path": "api/get-events/{access_token}",
                    "method": "get"
                  }
                },
                "name": "auth-server-dev-getCalendarEvents"
              }
            }
          },
          "configFileDirPath": "/Users/sateeshpenugonda/Desktop/meet/auth-server",
          "config": {
            "type": "file"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:file",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "/Users/sateeshpenugonda/Desktop/meet/auth-server",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "bhavani",
      "app": "meet",
      "service": "auth-server",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "eu-central-1",
        "timeout": 30,
        "environment": {
          "CLIENT_ID": "1048440440086-e433gpnelsb0kr1qq9qm581fdt41eu7c.apps.googleusercontent.com",
          "CLIENT_SECRET": "<REDACTED>",
          "CALENDAR_ID": "fullstackwebdev@careerfoundry.com"
        },
        "stage": "dev",
        "versionFunctions": true
      },
      "functions": {
        "getAuthURL": {
          "handler": "handler.getAuthURL",
          "events": [
            {
              "http": {
                "path": "api/get-auth-url",
                "method": "get"
              }
            }
          ],
          "name": "auth-server-dev-getAuthURL"
        },
        "getAccessToken": "<REDACTED>",
        "getCalendarEvents": {
          "handler": "handler.getCalendarEvents",
          "events": {
            "-http": {
              "path": "api/get-events/{access_token}",
              "method": "get"
            }
          },
          "name": "auth-server-dev-getCalendarEvents"
        }
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: bhavani\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: meet\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: auth-server\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  region: eu-central-1\n  timeout: 30 # optional, in seconds, default is 6\n  environment:\n    CLIENT_ID: ${file(config.json):CLIENT_ID}\n    CLIENT_SECRET: ${file(config.json):CLIENT_SECRET}\n    CALENDAR_ID: ${file(config.json):CALENDAR_ID}\n\n\nfunctions:\n  getAuthURL:\n    handler: handler.getAuthURL\n    events:\n      - http:\n          path: api/get-auth-url\n          method: get\n\n  getAccessToken:\n    handler: handler.getAccessToken\n    events:\n      - http:\n          path: api/token/{code}\n          method: get \n  getCalendarEvents:\n   handler: handler.getCalendarEvents\n   events:\n    -http:\n       path: api/get-events/{access_token}\n       method: get\n\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "events.some is not a function",
      "stack": "TypeError: events.some is not a function\n    at file:///Users/sateeshpenugonda/.serverless/releases/4.4.7/package/dist/sf-core.js:876:19605\n    at Array.some (<anonymous>)\n    at initialize (file:///Users/sateeshpenugonda/.serverless/releases/4.4.7/package/dist/sf-core.js:876:19581)\n    at PluginManager.run (file:///Users/sateeshpenugonda/.serverless/releases/4.4.7/package/dist/sf-core.js:953:10762)\n    at async Serverless.run (file:///Users/sateeshpenugonda/.serverless/releases/4.4.7/package/dist/sf-core.js:960:10612)\n    at async runFramework (file:///Users/sateeshpenugonda/.serverless/releases/4.4.7/package/dist/sf-core.js:983:2696)\n    at async route (file:///Users/sateeshpenugonda/.serverless/releases/4.4.7/package/dist/sf-core.js:1011:14772)\n    at async Object.run2 [as run] (file:///Users/sateeshpenugonda/.serverless/releases/4.4.7/package/dist/sf-core.js:1011:15173)\n    at async run3 (file:///Users/sateeshpenugonda/.serverless/releases/4.4.7/package/dist/sf-core.js:1011:16435)"
    },
    "params": {},
    "machineId": "117e3336b5bb04b3eb702c3f501bfba3",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "3031aa58-e5f1-4c97-8e9d-ce8d6dd110b4",
    "orgName": "bhavani",
    "userId": "NHZLd6BgVSKWpLqdmW",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "QqfDQpzbQDGVC9kJDD",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "bhavani",
    "subscription": null,
    "userEmail": "bhavani0202@gmail.com",
    "serviceProviderAwsRegion": "eu-central-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "124355639642",
    "projectType": "traditional",
    "versionSf": "4.4.7",
    "serviceProviderAwsCfStackName": "auth-server-dev",
    "serviceUniqueId": "arn:aws:cloudformation:eu-central-1:124355639642:stack/auth-server-dev/968e6ef0-9c48-11ef-83c8-0a168878a029",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-central-1:124355639642:stack/auth-server-dev/968e6ef0-9c48-11ef-83c8-0a168878a029",
    "serviceProviderAwsCfStackCreated": "2024-11-06T14:08:25.296Z",
    "serviceProviderAwsCfStackUpdated": "2024-11-06T15:17:49.033Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetAccessTokenLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-central-1:124355639642:function:auth-server-dev-getAccessToken:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-auth-server-dev-GetAccessTokenLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetAuthURLLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-central-1:124355639642:function:auth-server-dev-getAuthURL:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-auth-server-dev-GetAuthURLLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://aq5hixsugj.execute-api.eu-central-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-auth-server-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-central-1-5407ad46-d6b0",
        "ExportName": "sls-auth-server-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}